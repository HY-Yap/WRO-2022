
Sensor.SetMode(1, 0) 'left light sensor NXT - RGB
Sensor.SetMode(2, 0)  'right light sensor NXT - RGB
Sensor.SetMode(4, 4) 'line tracking sensor  - RGB
Sensor.SetMode(3, 0) 'gyro


'Variables to be initialised

targetAngle = 0
startAngle = 0

'##############################################################


'Invert motors

Motor.Invert("B") 'left motor
'right motor is C, no need to invert

'##############################################################


'Functions

Sub pTurnError 'calculate new currentAngle, diffAngle and error
  currentAngle = Sensor.ReadRawValue(3,0) 'current angle = gyro value
  diffAngle = currentAngle - startAngle
  error = targetAngle - diffAngle
EndSub

Sub pTurn 'before using this function, define startAngle & targetAngle
  integral = 2
  lastError = 0
  pTurnError()
  While diffAngle <> targetAngle 'or error <> 0 (they mean the same thing)
      integral = error + integral
      derivative = error - lastError
      last_error = error
      speed =  (error * 0.01) + (integral * 0.001) + (derivative * 0)
      Motor.StartSync("BC",speed,-speed)
      pTurnError()
  EndWhile
  Motor.Stop("BC","True")
EndSub

'##############################################################


'Code

startAngle = Sensor.ReadRawValue(3,0) 'start angle = gyro value
Motor.Move("B",40,400,"True") 'rotate
Program.Delay(500)
targetAngle = 90
pTurn()
Program.Delay(500)